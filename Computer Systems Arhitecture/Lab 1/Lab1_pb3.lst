     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  ;a+4+b-(5-d)
     3                                  ;a –word, b – byte, c - word, d – byt
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start        
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15 00000000 0F00                        a dw 15
    16 00000002 04                          b db 4
    17 00000003 1300                        c dw 19
    18 00000005 02                          d db 2
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24                                          ;a+4
    25 00000000 66A1[00000000]                  mov ax, [a]
    26 00000006 6683C004                        add ax, 4
    27                                          
    28                                          ;a+4+b
    29 0000000A 660305[02000000]                add ax, [b];=al
    30                                          
    31                                          ;(5-d)
    32 00000011 8A1D[05000000]                  mov bl, [d]
    33 00000017 B105                            mov cl, 5
    34 00000019 28D9                            sub cl, bl
    35                                          
    36                                          ;a+4+b-(5-d)
    37 0000001B 28C8                            sub al, cl
    38                                          
    39                                      
    40                                          ; exit(0)
    41 0000001D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000001F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
